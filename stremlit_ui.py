import streamlit as st
from main import BookRAG
import os
import logging

logger = logging.getLogger(__name__)

st.set_page_config(
    page_title="–ö–Ω–∏–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Å RAG",
    page_icon="üìö",
    layout="wide"
)

# –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ —á–∞—Ç–∞
st.markdown("""
<style>
.chat-message {
    padding: 1.5rem; border-radius: 0.5rem; margin-bottom: 1rem; display: flex
}
.chat-message.user {
    background-color: #2b313e
}
.chat-message.assistant {
    background-color: #475063
}
.chat-message .avatar {
    width: 20%;
}
.chat-message .avatar img {
    max-width: 78px;
    max-height: 78px;
    border-radius: 50%;
    object-fit: cover;
}
.chat-message .message {
    width: 80%;
    padding: 0 1.5rem;
    color: #fff;
}
</style>
""", unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞
def message(content, is_user=False, is_error=False):
    avatar = "üë§" if is_user else "ü§ñ"
    background_color = "#2b313e" if is_user else "#475063"
    if is_error:
        background_color = "#8B0000"

    st.markdown(f"""
    <div class="chat-message" style="background-color: {background_color}">
        <div class="avatar">
            <div style="font-size: 50px; text-align: center;">{avatar}</div>
        </div>
        <div class="message">{content}</div>
    </div>
    """, unsafe_allow_html=True)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'messages' not in st.session_state:
    st.session_state.messages = []

if 'rag' not in st.session_state:
    try:
        with st.spinner('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...'):
            logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RAG –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ...")
            st.session_state.rag = BookRAG()
            st.session_state.messages.append({
                "role": "assistant",
                "content": "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –∫–Ω–∏–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å –æ –∫–Ω–∏–≥–µ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –≤–∞–º –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç."
            })
    except FileNotFoundError:
        st.error("–§–∞–π–ª book.pdf –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        st.stop()
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã: {str(e)}")
        logger.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}", exc_info=True)
        st.stop()

# –°–æ–∑–¥–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
with st.sidebar:
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    available_sections = st.session_state.rag.get_available_sections()

    # –í—ã–±–æ—Ä —Ä–∞–∑–¥–µ–ª–∞
    selected_section = st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∫–Ω–∏–≥–∏",
        ["–í—Å—è –∫–Ω–∏–≥–∞"] + available_sections,
        index=0
    )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
    if st.button("–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —ç–º–±–µ–¥–¥–∏–Ω–≥–∏"):
        with st.spinner("–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤..."):
            success = st.session_state.rag.force_rebuild_embeddings()
            if success:
                st.success("–≠–º–±–µ–¥–¥–∏–Ω–≥–∏ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã!")
            else:
                st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤")

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
    if st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
        st.session_state.messages = [{
            "role": "assistant",
            "content": "üëã –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞. –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ –∫–Ω–∏–≥–µ."
        }]
        st.experimental_rerun()

# –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üìö –ö–Ω–∏–∂–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —Å RAG")

# –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞–∑–¥–µ–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
if selected_section != "–í—Å—è –∫–Ω–∏–≥–∞":
    st.info(f"üîç –ü–æ–∏—Å–∫ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ: {selected_section}")

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
for message_data in st.session_state.messages:
    message(
        message_data["content"],
        is_user=(message_data["role"] == "user"),
        is_error=message_data.get("is_error", False)
    )

# –ü–æ–ª–µ –≤–≤–æ–¥–∞
if prompt := st.chat_input("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –∫–Ω–∏–≥–µ..."):
    # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    st.session_state.messages.append({"role": "user", "content": prompt})
    message(prompt, is_user=True)

    try:
        with st.spinner('–ò—â—É –æ—Ç–≤–µ—Ç...'):
            # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ä–∞–∑–¥–µ–ª
            if selected_section != "–í—Å—è –∫–Ω–∏–≥–∞":
                response = st.session_state.rag.search_by_section(selected_section, prompt)
            else:
                response = st.session_state.rag.ask_question(prompt)

            # –†–∞–∑–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
            parts = response.split("\n\n–ò—Å—Ç–æ—á–Ω–∏–∫–∏:")
            main_answer = parts[0]
            metadata = "–ò—Å—Ç–æ—á–Ω–∏–∫–∏:" + parts[1] if len(parts) > 1 else ""

            # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
            full_response = f"{main_answer}\n\n<details><summary>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞</summary>{metadata}</details>"

            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
            st.session_state.messages.append({
                "role": "assistant",
                "content": full_response
            })
            message(full_response)

            logger.info("–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å")
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞: {str(e)}"
        logger.error(error_msg, exc_info=True)
        st.session_state.messages.append({
            "role": "assistant",
            "content": error_msg,
            "is_error": True
        })
        message(error_msg, is_error=True)

# –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
with st.sidebar:
    with st.expander("‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è"):
        st.markdown("""
        1. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∫–Ω–∏–≥–∏ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ "–í—Å—è –∫–Ω–∏–≥–∞" –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –≤—Å–µ–º—É —Ç–µ–∫—Å—Ç—É)
        2. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ –ø–æ–ª–µ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞
        3. –ü–æ–ª—É—á–∏—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤

        **–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:**
        - "–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–ª—é—á–µ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä —É—Å–ø–µ—Ö–∞?"
        - "–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∫–æ–º–∞–Ω–¥—ã"
        - "–ö–∞–∫ —Å–ø—Ä–∞–≤–ª—è—Ç—å—Å—è —Å –∫—Ä–∏–∑–∏—Å–æ–º –≤ –±–∏–∑–Ω–µ—Å–µ?"
        """)